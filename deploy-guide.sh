#!/bin/bash

echo "üöÄ GUIA DE DEPLOY - RASPA DA SORTE"
echo "=================================="
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo "üéØ ESCOLHA SUA OP√á√ÉO DE DEPLOY:"
echo ""

echo "1Ô∏è‚É£  OP√á√ÉO A: HOSTINGER (Site Est√°tico)"
echo "   - Eu crio vers√£o HTML/CSS/JS"
echo "   - Voc√™ faz upload na Hostinger"
echo "   - Funcionalidades limitadas"
echo "   - Custo: ~R$ 150-290/ano"
echo ""

echo "2Ô∏è‚É£  OP√á√ÉO B: VERCEL + RAILWAY (Recomendada)"
echo "   - Deploy autom√°tico"
echo "   - Tudo funciona perfeitamente"
echo "   - Mais f√°cil para iniciantes"
echo "   - Custo: ~R$ 30-50/ano"
echo ""

read -p "Escolha (1 ou 2): " choice

if [ "$choice" = "1" ]; then
    echo ""
    print_info "OP√á√ÉO A: HOSTINGER (Site Est√°tico)"
    echo ""
    echo "üìã PASSO A PASSO:"
    echo ""
    echo "1. üé® Eu crio vers√£o est√°tica"
    echo "2. üìÅ Voc√™ faz upload na Hostinger"
    echo "3. üåê Configure dom√≠nio"
    echo "4. ‚úÖ Pronto!"
    echo ""
    echo "‚ö†Ô∏è  LIMITA√á√ïES:"
    echo "- Sem sistema de login"
    echo "- Sem banco de dados"
    echo "- Sem APIs din√¢micas"
    echo "- Apenas interface visual"
    echo ""
    print_warning "Quer que eu crie a vers√£o est√°tica agora?"
    read -p "Sim/N√£o: " create_static
    
    if [[ $create_static =~ ^[Ss]$ ]]; then
        echo ""
        print_info "Criando vers√£o est√°tica..."
        # Aqui eu criaria os arquivos HTML/CSS/JS
        echo "üìÅ Arquivos criados na pasta 'static-version'"
        echo "üì§ Fa√ßa upload desses arquivos na Hostinger"
    fi

elif [ "$choice" = "2" ]; then
    echo ""
    print_info "OP√á√ÉO B: VERCEL + RAILWAY (Recomendada)"
    echo ""
    echo "üöÄ DEPLOY AUTOM√ÅTICO:"
    echo ""
    
    # Verificar se tem Git configurado
    if ! git config --get user.name > /dev/null; then
        print_warning "Git n√£o configurado. Configurando..."
        read -p "Seu nome: " git_name
        read -p "Seu email: " git_email
        git config --global user.name "$git_name"
        git config --global user.email "$git_email"
        print_status "Git configurado!"
    fi
    
    echo "üìã PASSO A PASSO:"
    echo ""
    echo "1. üåê Vercel (Frontend):"
    echo "   - V√° para: https://vercel.com"
    echo "   - Fa√ßa login com GitHub"
    echo "   - Clique em 'New Project'"
    echo "   - Conecte seu reposit√≥rio"
    echo "   - Clique em 'Deploy'"
    echo ""
    echo "2. üîß Railway (Backend):"
    echo "   - V√° para: https://railway.app"
    echo "   - Fa√ßa login com GitHub"
    echo "   - Clique em 'New Project'"
    echo "   - Conecte seu reposit√≥rio"
    echo "   - Configure vari√°veis de ambiente"
    echo ""
    echo "3. üîó Integra√ß√£o:"
    echo "   - Copie URL do Railway"
    echo "   - Configure no Vercel"
    echo "   - Teste tudo"
    echo ""
    
    print_warning "Quer que eu te ajude com o deploy agora?"
    read -p "Sim/N√£o: " help_deploy
    
    if [[ $help_deploy =~ ^[Ss]$ ]]; then
        echo ""
        print_info "Preparando para deploy..."
        
        # Verificar se o projeto est√° pronto
        if [ -f "package.json" ] && [ -d "frontend" ] && [ -d "backend" ]; then
            print_status "Projeto verificado!"
            
            echo ""
            echo "üîß CONFIGURA√á√ÉO NECESS√ÅRIA:"
            echo ""
            echo "üìù No Railway (Backend), configure:"
            echo "DATABASE_URL=file:./dev.db"
            echo "JWT_SECRET=sua_chave_secreta_aqui"
            echo "PORT=3001"
            echo ""
            echo "üìù No Vercel (Frontend), configure:"
            echo "NEXT_PUBLIC_API_URL=https://seu-backend.railway.app/api"
            echo ""
            
            print_warning "Quer que eu prepare o c√≥digo para deploy?"
            read -p "Sim/N√£o: " prepare_code
            
            if [[ $prepare_code =~ ^[Ss]$ ]]; then
                echo ""
                print_info "Preparando c√≥digo..."
                
                # Commit das mudan√ßas
                git add .
                git commit -m "Preparando para deploy"
                
                print_status "C√≥digo preparado!"
                echo ""
                echo "üöÄ PR√ìXIMOS PASSOS:"
                echo "1. git push origin main"
                echo "2. Configure Vercel"
                echo "3. Configure Railway"
                echo "4. Teste tudo"
            fi
        else
            print_error "Projeto n√£o encontrado!"
            echo "Certifique-se de estar no diret√≥rio correto."
        fi
    fi

else
    print_error "Op√ß√£o inv√°lida!"
    echo "Escolha 1 ou 2."
fi

echo ""
print_status "Guia de deploy conclu√≠do!"
echo ""
echo "üìû Precisa de ajuda? Me pergunte!" 