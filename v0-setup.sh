#!/bin/bash

echo "üöÄ CONFIGURA√á√ÉO V0.DEV - RASPA DA SORTE"
echo "======================================"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir com cores
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo "üìã PASSO A PASSO PARA INTEGRA√á√ÉO COM V0.DEV"
echo ""

print_info "FASE 1: PREPARA√á√ÉO DO PROJETO"
echo ""

# Verificar se est√° no diret√≥rio correto
if [ ! -f "package.json" ]; then
    print_error "Voc√™ precisa estar na raiz do projeto!"
    print_info "Execute: cd /caminho/para/raspa-da-sorte-main"
    exit 1
fi

print_status "Diret√≥rio do projeto verificado"

# Verificar se o backend est√° rodando
if curl -s http://localhost:3001/api/health > /dev/null; then
    print_status "Backend est√° rodando na porta 3001"
else
    print_warning "Backend n√£o est√° rodando. Iniciando..."
    cd backend && npm run dev &
    sleep 5
    if curl -s http://localhost:3001/api/health > /dev/null; then
        print_status "Backend iniciado com sucesso"
    else
        print_error "Falha ao iniciar backend"
        exit 1
    fi
    cd ..
fi

echo ""
print_info "FASE 2: CONFIGURA√á√ÉO DO V0.DEV"
echo ""

echo "üìù PROMPTS PRONTOS PARA V0.DEV:"
echo ""

echo "üé® PROMPT 1 - P√ÅGINA PRINCIPAL:"
echo "--------------------------------"
cat << 'EOF'
Crie uma p√°gina inicial para um jogo de raspadinhas online chamado "Raspa da Sorte" com:

- Header com logo e navega√ß√£o
- Hero section com chamada para a√ß√£o
- Se√ß√£o de login/cadastro
- Design moderno com gradientes amarelos
- Responsivo para mobile
- Bot√µes para "Jogar Agora" e "Cadastrar"
- Footer com informa√ß√µes

Use Tailwind CSS e Next.js 14 com App Router.
EOF

echo ""
echo "üîê PROMPT 2 - P√ÅGINA DE LOGIN:"
echo "------------------------------"
cat << 'EOF'
Crie uma p√°gina de login para o jogo "Raspa da Sorte" com:

- Formul√°rio de login com email e senha
- Link para cadastro
- Design moderno com gradientes
- Valida√ß√£o de campos
- Loading states
- Mensagens de erro
- Responsivo

Use Tailwind CSS e Next.js 14.
EOF

echo ""
echo "üéÆ PROMPT 3 - P√ÅGINA DO JOGO:"
echo "-----------------------------"
cat << 'EOF'
Crie uma p√°gina de jogo de raspadinhas com:

- Header com saldo, cr√©ditos e navega√ß√£o
- √Årea principal do jogo com raspadinha
- Bot√£o "Raspar" para jogar
- √Årea de resultado (pr√™mio ou "tente novamente")
- Sidebar com op√ß√µes de compra de cr√©ditos
- Estat√≠sticas de pr√™mios recentes
- Design atrativo e responsivo

Use Tailwind CSS e Next.js 14.
EOF

echo ""
echo "üèÜ PROMPT 4 - P√ÅGINA DE CONQUISTAS:"
echo "----------------------------------"
cat << 'EOF'
Crie uma p√°gina de conquistas/gamifica√ß√£o com:

- Grid de cards de conquistas
- Progresso visual com barras
- Sistema de login di√°rio
- Estat√≠sticas do jogador
- Badges e √≠cones
- Design moderno e gamificado

Use Tailwind CSS e Next.js 14.
EOF

echo ""
print_info "FASE 3: CONFIGURA√á√ÉO DO DEPLOY"
echo ""

echo "üîß VARI√ÅVEIS DE AMBIENTE PARA VERCEL:"
echo "NEXT_PUBLIC_API_URL=http://localhost:3001/api"
echo ""

echo "üåê URL DO BACKEND PARA PRODU√á√ÉO:"
echo "Substitua pela URL do seu backend no Railway/Render"
echo ""

print_info "FASE 4: WORKFLOW DE DESENVOLVIMENTO"
echo ""

echo "1. üì± Acesse: https://v0.dev"
echo "2. üîê Fa√ßa login com GitHub"
echo "3. ‚ûï Clique em 'New Project'"
echo "4. üéØ Escolha 'Next.js 14'"
echo "5. üìù Cole os prompts acima"
echo "6. üé® Ajuste o design"
echo "7. üì§ Exporte o c√≥digo"
echo "8. üîó Configure no Vercel"
echo ""

print_info "FASE 5: TESTE E INTEGRA√á√ÉO"
echo ""

echo "üß™ TESTES NECESS√ÅRIOS:"
echo "- ‚úÖ Cadastro de usu√°rio"
echo "- ‚úÖ Login/logout"
echo "- ‚úÖ Jogo de raspadinhas"
echo "- ‚úÖ Sistema de conquistas"
echo "- ‚úÖ Responsividade mobile"
echo "- ‚úÖ Integra√ß√£o com backend"
echo ""

print_warning "IMPORTANTE:"
echo "- Mantenha backup do c√≥digo original"
echo "- Teste em diferentes dispositivos"
echo "- Configure CORS no backend"
echo "- Use vari√°veis de ambiente"
echo ""

print_status "Configura√ß√£o conclu√≠da!"
echo ""
echo "üéâ Agora voc√™ pode come√ßar a usar o v0.dev!"
echo ""
echo "üìû Precisa de ajuda? Consulte o arquivo v0-integration-guide.md" 