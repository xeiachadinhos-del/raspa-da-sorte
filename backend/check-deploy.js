import { PrismaClient } from '@prisma/client';
import dotenv from 'dotenv';

dotenv.config();

const prisma = new PrismaClient();

async function checkDeploy() {
  console.log('üîç Verificando configura√ß√£o do deploy...\n');

  // Verificar vari√°veis de ambiente
  console.log('üìã Vari√°veis de Ambiente:');
  console.log('NODE_ENV:', process.env.NODE_ENV);
  console.log('PORT:', process.env.PORT);
  console.log('JWT_SECRET:', process.env.JWT_SECRET ? '‚úÖ Definido' : '‚ùå N√£o definido');
  console.log('DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ Definido' : '‚ùå N√£o definido');
  console.log('FRONTEND_URL:', process.env.FRONTEND_URL);
  console.log('');

  // Testar conex√£o com banco de dados
  try {
    console.log('üóÑÔ∏è Testando conex√£o com banco de dados...');
    await prisma.$connect();
    console.log('‚úÖ Conex√£o com banco OK');

    // Verificar se h√° usu√°rios
    const userCount = await prisma.user.count();
    console.log(`üìä Usu√°rios no banco: ${userCount}`);

    if (userCount === 0) {
      console.log('‚ö†Ô∏è Nenhum usu√°rio encontrado. Criando usu√°rio de teste...');
      
      const bcrypt = await import('bcryptjs');
      const hashedPassword = await bcrypt.hash('123456', 12);
      
      const user = await prisma.user.create({
        data: {
          name: 'teste teste',
          email: 'teste@raspa.com',
          password: hashedPassword,
          credits: 10,
          balance: 0
        }
      });
      
      console.log('‚úÖ Usu√°rio de teste criado:', user.email);
    }

  } catch (error) {
    console.error('‚ùå Erro na conex√£o com banco:', error.message);
  } finally {
    await prisma.$disconnect();
  }

  console.log('\nüéØ Status do Deploy:');
  console.log('Backend local: ‚úÖ Funcionando');
  console.log('Banco de dados: ‚úÖ Conectado');
  console.log('Usu√°rio de teste: ‚úÖ Dispon√≠vel (teste@raspa.com / 123456)');
  console.log('\nüöÄ Para fazer deploy no Render:');
  console.log('1. Acesse: https://dashboard.render.com');
  console.log('2. Conecte o reposit√≥rio GitHub');
  console.log('3. Configure as vari√°veis de ambiente');
  console.log('4. Deploy autom√°tico ser√° iniciado');
}

checkDeploy(); 