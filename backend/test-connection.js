import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testConnection() {
  try {
    console.log('üîç Testando conex√£o com o banco de dados...');
    
    // Testar conex√£o
    await prisma.$connect();
    console.log('‚úÖ Conex√£o com banco estabelecida!');
    
    // Contar usu√°rios
    const userCount = await prisma.user.count();
    console.log('üìä Total de usu√°rios:', userCount);
    
    // Listar todos os usu√°rios
    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        name: true,
        balance: true,
        credits: true,
        createdAt: true
      }
    });
    
    console.log('\nüë• Usu√°rios no banco:');
    users.forEach(user => {
      console.log(`- ${user.email} (${user.name}) - Saldo: R$ ${user.balance} - Cr√©ditos: ${user.credits}`);
    });
    
    // Verificar usu√°rio admin especificamente
    const admin = await prisma.user.findUnique({
      where: { email: 'admin@gmail.com' }
    });
    
    if (admin) {
      console.log('\nüëë USU√ÅRIO ADMIN:');
      console.log('Email:', admin.email);
      console.log('Nome:', admin.name);
      console.log('Saldo:', admin.balance);
      console.log('Cr√©ditos:', admin.credits);
      console.log('N√≠vel:', admin.level);
      console.log('XP:', admin.xp);
    } else {
      console.log('\n‚ùå Usu√°rio admin n√£o encontrado!');
    }
    
  } catch (error) {
    console.error('‚ùå Erro na conex√£o:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testConnection(); 